{"ast":null,"code":"import { equal } from '@wry/equality';\nimport { graphQLResultHasError } from '../utilities/common/errorHandling.js';\nimport { isNonEmptyArray } from '../utilities/common/arrays.js';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus.js';\nvar QueryInfo = function () {\n  function QueryInfo(cache) {\n    this.cache = cache;\n    this.listeners = new Set();\n    this.document = null;\n    this.lastRequestId = 1;\n    this.subscriptions = new Set();\n    this.dirty = false;\n    this.diff = null;\n    this.observableQuery = null;\n  }\n  QueryInfo.prototype.init = function (query) {\n    var networkStatus = query.networkStatus || NetworkStatus.loading;\n    if (this.variables && this.networkStatus !== NetworkStatus.loading && !equal(this.variables, query.variables)) {\n      networkStatus = NetworkStatus.setVariables;\n    }\n    Object.assign(this, {\n      document: query.document,\n      variables: query.variables,\n      networkError: null,\n      graphQLErrors: this.graphQLErrors || [],\n      networkStatus: networkStatus\n    });\n    if (query.observableQuery) {\n      this.setObservableQuery(query.observableQuery);\n    }\n    if (query.lastRequestId) {\n      this.lastRequestId = query.lastRequestId;\n    }\n    return this;\n  };\n  QueryInfo.prototype.setDirty = function () {\n    var _this = this;\n    if (!this.dirty) {\n      this.dirty = true;\n      if (!this.notifyTimeout) {\n        this.notifyTimeout = setTimeout(function () {\n          return _this.notify();\n        }, 0);\n      }\n    }\n    return this;\n  };\n  QueryInfo.prototype.setDiff = function (diff) {\n    var oldDiff = this.diff;\n    this.diff = diff;\n    if (!this.dirty && (diff === null || diff === void 0 ? void 0 : diff.result) !== (oldDiff === null || oldDiff === void 0 ? void 0 : oldDiff.result)) {\n      this.setDirty();\n    }\n  };\n  QueryInfo.prototype.setObservableQuery = function (oq) {\n    if (oq === this.observableQuery) return;\n    if (this.oqListener) {\n      this.listeners.delete(this.oqListener);\n    }\n    this.observableQuery = oq;\n    if (oq) {\n      this.listeners.add(this.oqListener = function () {\n        return oq.reobserve();\n      });\n    } else {\n      delete this.oqListener;\n    }\n  };\n  QueryInfo.prototype.notify = function () {\n    var _this = this;\n    if (this.notifyTimeout) {\n      clearTimeout(this.notifyTimeout);\n      this.notifyTimeout = void 0;\n    }\n    if (this.shouldNotify()) {\n      this.listeners.forEach(function (listener) {\n        return listener(_this);\n      });\n    }\n    this.dirty = false;\n  };\n  QueryInfo.prototype.shouldNotify = function () {\n    if (!this.dirty || !this.listeners.size) {\n      return false;\n    }\n    if (isNetworkRequestInFlight(this.networkStatus) && this.observableQuery) {\n      var fetchPolicy = this.observableQuery.options.fetchPolicy;\n      if (fetchPolicy !== \"cache-only\" && fetchPolicy !== \"cache-and-network\") {\n        return false;\n      }\n    }\n    return true;\n  };\n  QueryInfo.prototype.stop = function () {\n    this.cancel();\n    delete this.cancel;\n    this.variables = this.networkStatus = this.networkError = this.graphQLErrors = void 0;\n    var oq = this.observableQuery;\n    if (oq) oq.stopPolling();\n  };\n  QueryInfo.prototype.cancel = function () {};\n  QueryInfo.prototype.updateWatch = function (variables) {\n    var _this = this;\n    if (!this.lastWatch || this.lastWatch.query !== this.document || !equal(variables, this.lastWatch.variables)) {\n      this.cancel();\n      this.cancel = this.cache.watch(this.lastWatch = {\n        query: this.document,\n        variables: variables,\n        optimistic: true,\n        callback: function (diff) {\n          return _this.setDiff(diff);\n        }\n      });\n    }\n    return this;\n  };\n  QueryInfo.prototype.markResult = function (result, options, allowCacheWrite) {\n    var _this = this;\n    if (options.fetchPolicy === 'no-cache') {\n      this.diff = {\n        result: result.data,\n        complete: true\n      };\n    } else if (allowCacheWrite) {\n      var ignoreErrors = options.errorPolicy === 'ignore' || options.errorPolicy === 'all';\n      var writeWithErrors = !graphQLResultHasError(result);\n      if (!writeWithErrors && ignoreErrors && result.data) {\n        writeWithErrors = true;\n      }\n      if (writeWithErrors) {\n        this.cache.performTransaction(function (cache) {\n          cache.writeQuery({\n            query: _this.document,\n            data: result.data,\n            variables: options.variables\n          });\n          var diff = cache.diff({\n            query: _this.document,\n            variables: options.variables,\n            returnPartialData: true,\n            optimistic: true\n          });\n          _this.diff = diff;\n          if (diff.complete) {\n            result.data = diff.result;\n          }\n        });\n      }\n    }\n    this.graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n  };\n  QueryInfo.prototype.markReady = function () {\n    this.networkError = null;\n    return this.networkStatus = NetworkStatus.ready;\n  };\n  QueryInfo.prototype.markError = function (error) {\n    this.networkStatus = NetworkStatus.error;\n    if (error.graphQLErrors) {\n      this.graphQLErrors = error.graphQLErrors;\n    }\n    if (error.networkError) {\n      this.networkError = error.networkError;\n    }\n    return error;\n  };\n  return QueryInfo;\n}();\nexport { QueryInfo };","map":{"version":3,"mappings":"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","names":["QueryInfo","cache","listeners","Set","document","lastRequestId","subscriptions","dirty","diff","observableQuery","prototype","init","query","networkStatus","NetworkStatus","loading","variables","equal","setVariables","Object","assign","networkError","graphQLErrors","setObservableQuery","setDirty","_this","notifyTimeout","setTimeout","notify","setDiff","oldDiff","result","oq","oqListener","delete","add","reobserve","clearTimeout","shouldNotify","forEach","listener","size","isNetworkRequestInFlight","fetchPolicy","options","stop","cancel","stopPolling","updateWatch","lastWatch","watch","optimistic","callback","markResult","allowCacheWrite","data","complete","ignoreErrors","errorPolicy","writeWithErrors","graphQLResultHasError","performTransaction","writeQuery","returnPartialData","isNonEmptyArray","errors","markReady","ready","markError","error"],"sources":["QueryInfo.js"],"sourcesContent":["import { equal } from \"@wry/equality\";\nimport { isNonEmptyArray } from '../utilities/common/arrays';\nimport { graphQLResultHasError } from '../utilities/common/errorHandling';\nimport { NetworkStatus, isNetworkRequestInFlight, } from './networkStatus';\nvar QueryInfo = (function () {\n    function QueryInfo(cache) {\n        this.cache = cache;\n        this.listeners = new Set();\n        this.document = null;\n        this.lastRequestId = 1;\n        this.subscriptions = new Set();\n        this.dirty = false;\n        this.diff = null;\n        this.observableQuery = null;\n    }\n    QueryInfo.prototype.init = function (query) {\n        var networkStatus = query.networkStatus || NetworkStatus.loading;\n        if (this.variables &&\n            this.networkStatus !== NetworkStatus.loading &&\n            !equal(this.variables, query.variables)) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        Object.assign(this, {\n            document: query.document,\n            variables: query.variables,\n            networkError: null,\n            graphQLErrors: this.graphQLErrors || [],\n            networkStatus: networkStatus,\n        });\n        if (query.observableQuery) {\n            this.setObservableQuery(query.observableQuery);\n        }\n        if (query.lastRequestId) {\n            this.lastRequestId = query.lastRequestId;\n        }\n        return this;\n    };\n    QueryInfo.prototype.setDirty = function () {\n        var _this = this;\n        if (!this.dirty) {\n            this.dirty = true;\n            if (!this.notifyTimeout) {\n                this.notifyTimeout = setTimeout(function () { return _this.notify(); }, 0);\n            }\n        }\n        return this;\n    };\n    QueryInfo.prototype.setDiff = function (diff) {\n        var oldDiff = this.diff;\n        this.diff = diff;\n        if (!this.dirty && (diff === null || diff === void 0 ? void 0 : diff.result) !== (oldDiff === null || oldDiff === void 0 ? void 0 : oldDiff.result)) {\n            this.setDirty();\n        }\n    };\n    QueryInfo.prototype.setObservableQuery = function (oq) {\n        if (oq === this.observableQuery)\n            return;\n        if (this.oqListener) {\n            this.listeners.delete(this.oqListener);\n        }\n        this.observableQuery = oq;\n        if (oq) {\n            this.listeners.add(this.oqListener = function () { return oq.reobserve(); });\n        }\n        else {\n            delete this.oqListener;\n        }\n    };\n    QueryInfo.prototype.notify = function () {\n        var _this = this;\n        if (this.notifyTimeout) {\n            clearTimeout(this.notifyTimeout);\n            this.notifyTimeout = void 0;\n        }\n        if (this.shouldNotify()) {\n            this.listeners.forEach(function (listener) { return listener(_this); });\n        }\n        this.dirty = false;\n    };\n    QueryInfo.prototype.shouldNotify = function () {\n        if (!this.dirty || !this.listeners.size) {\n            return false;\n        }\n        if (isNetworkRequestInFlight(this.networkStatus) &&\n            this.observableQuery) {\n            var fetchPolicy = this.observableQuery.options.fetchPolicy;\n            if (fetchPolicy !== \"cache-only\" &&\n                fetchPolicy !== \"cache-and-network\") {\n                return false;\n            }\n        }\n        return true;\n    };\n    QueryInfo.prototype.stop = function () {\n        this.cancel();\n        delete this.cancel;\n        this.variables =\n            this.networkStatus =\n                this.networkError =\n                    this.graphQLErrors = void 0;\n        var oq = this.observableQuery;\n        if (oq)\n            oq.stopPolling();\n    };\n    QueryInfo.prototype.cancel = function () { };\n    QueryInfo.prototype.updateWatch = function (variables) {\n        var _this = this;\n        if (!this.lastWatch ||\n            this.lastWatch.query !== this.document ||\n            !equal(variables, this.lastWatch.variables)) {\n            this.cancel();\n            this.cancel = this.cache.watch(this.lastWatch = {\n                query: this.document,\n                variables: variables,\n                optimistic: true,\n                callback: function (diff) { return _this.setDiff(diff); },\n            });\n        }\n        return this;\n    };\n    QueryInfo.prototype.markResult = function (result, options, allowCacheWrite) {\n        var _this = this;\n        if (options.fetchPolicy === 'no-cache') {\n            this.diff = { result: result.data, complete: true };\n        }\n        else if (allowCacheWrite) {\n            var ignoreErrors = options.errorPolicy === 'ignore' ||\n                options.errorPolicy === 'all';\n            var writeWithErrors = !graphQLResultHasError(result);\n            if (!writeWithErrors && ignoreErrors && result.data) {\n                writeWithErrors = true;\n            }\n            if (writeWithErrors) {\n                this.cache.performTransaction(function (cache) {\n                    cache.writeQuery({\n                        query: _this.document,\n                        data: result.data,\n                        variables: options.variables,\n                    });\n                    var diff = cache.diff({\n                        query: _this.document,\n                        variables: options.variables,\n                        returnPartialData: true,\n                        optimistic: true,\n                    });\n                    _this.diff = diff;\n                    if (diff.complete) {\n                        result.data = diff.result;\n                    }\n                });\n            }\n        }\n        this.graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n    };\n    QueryInfo.prototype.markReady = function () {\n        this.networkError = null;\n        return this.networkStatus = NetworkStatus.ready;\n    };\n    QueryInfo.prototype.markError = function (error) {\n        this.networkStatus = NetworkStatus.error;\n        if (error.graphQLErrors) {\n            this.graphQLErrors = error.graphQLErrors;\n        }\n        if (error.networkError) {\n            this.networkError = error.networkError;\n        }\n        return error;\n    };\n    return QueryInfo;\n}());\nexport { QueryInfo };\n//# sourceMappingURL=QueryInfo.js.map"]},"metadata":{},"sourceType":"module"}