{"ast":null,"code":"import { invariant } from 'ts-invariant';\nfunction toPromise(observable) {\n  var completed = false;\n  return new Promise(function (resolve, reject) {\n    observable.subscribe({\n      next: function (data) {\n        if (completed) {\n          process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject\n    });\n  });\n}\nexport { toPromise };","map":{"version":3,"mappings":";AACO,SAASA,SAAS,CAACC,UAAU,EAAE;EAClC,IAAIC,SAAS,GAAG,KAAK;EACrB,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC1CJ,UAAU,CAACK,SAAS,CAAC;MACjBC,IAAI,EAAE,UAAUC,IAAI,EAAE;QAClB,IAAIN,SAAS,EAAE;UACXO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIC,SAAS,CAACC,IAAI,CAAC,mEAAmE,CAAC;QAChJ,CAAiB,MACI;UACDX,SAAS,GAAG,IAAI;UAChBE,OAAO,CAACI,IAAI,CAAC;QACjC;MACA,CAAa;MACDM,KAAK,EAAET;IACnB,CAAS,CAAC;EACV,CAAK,CAAC;AACN","names":["toPromise","observable","completed","Promise","resolve","reject","subscribe","next","data","process","env","NODE_ENV","invariant","warn","error"],"sources":["toPromise.js"],"sourcesContent":["import { invariant } from 'ts-invariant';\nexport function toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\n//# sourceMappingURL=toPromise.js.map"]},"metadata":{},"sourceType":"module"}