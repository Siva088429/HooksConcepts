{"ast":null,"code":"import { __extends } from 'tslib';\nimport { isNonEmptyArray } from '../utilities/common/arrays.js';\nfunction isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n  var message = '';\n  if (isNonEmptyArray(err.graphQLErrors)) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += errorMessage + \"\\n\";\n    });\n  }\n  if (err.networkError) {\n    message += err.networkError.message + \"\\n\";\n  }\n  message = message.replace(/\\n$/, '');\n  return message;\n};\nvar ApolloError = function (_super) {\n  __extends(ApolloError, _super);\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n      networkError = _a.networkError,\n      errorMessage = _a.errorMessage,\n      extraInfo = _a.extraInfo;\n    var _this = _super.call(this, errorMessage) || this;\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n    _this.message = errorMessage || generateErrorMessage(_this);\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n  return ApolloError;\n}(Error);\nexport { ApolloError, isApolloError };","map":{"version":3,"mappings":";;AAEO,SAASA,aAAa,CAACC,GAAG,EAAE;EAC/B,OAAOA,GAAG,CAACC,cAAc,CAAC,eAAe,CAAC;AAC9C;AACA,IAAIC,oBAAoB,GAAG,UAAUF,GAAG,EAAE;EACtC,IAAIG,OAAO,GAAG,EAAE;EAChB,IAAIC,eAAe,CAACJ,GAAG,CAACK,aAAa,CAAC,EAAE;IACpCL,GAAG,CAACK,aAAa,CAACC,OAAO,CAAC,UAAUC,YAAY,EAAE;MAC9C,IAAIC,YAAY,GAAGD,YAAY,GACzBA,YAAY,CAACJ,OAAO,GACpB,0BAA0B;MAChCA,OAAO,IAAIK,YAAY,GAAG,IAAI;IAC1C,CAAS,CAAC;EACV;EACI,IAAIR,GAAG,CAACS,YAAY,EAAE;IAClBN,OAAO,IAAIH,GAAG,CAACS,YAAY,CAACN,OAAO,GAAG,IAAI;EAClD;EACIA,OAAO,GAAGA,OAAO,CAACO,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EACpC,OAAOP,OAAO;AAClB,CAAC;AACE,IAACQ,WAAW,GAAI,UAAUC,MAAM,EAAE;EACjCC,SAAS,CAACF,WAAW,EAAEC,MAAM,CAAC;EAC9B,SAASD,WAAW,CAACG,EAAE,EAAE;IACrB,IAAIT,aAAa,GAAGS,EAAE,CAACT,aAAa;MAAEI,YAAY,GAAGK,EAAE,CAACL,YAAY;MAAED,YAAY,GAAGM,EAAE,CAACN,YAAY;MAAEO,SAAS,GAAGD,EAAE,CAACC,SAAS;IAC9H,IAAIC,KAAK,GAAGJ,MAAM,CAACK,IAAI,CAAC,IAAI,EAAET,YAAY,CAAC,IAAI,IAAI;IACnDQ,KAAK,CAACX,aAAa,GAAGA,aAAa,IAAI,EAAE;IACzCW,KAAK,CAACP,YAAY,GAAGA,YAAY,IAAI,IAAI;IACzCO,KAAK,CAACb,OAAO,GAAGK,YAAY,IAAIN,oBAAoB,CAACc,KAAK,CAAC;IAC3DA,KAAK,CAACD,SAAS,GAAGA,SAAS;IAC3BC,KAAK,CAACE,SAAS,GAAGP,WAAW,CAACQ,SAAS;IACvC,OAAOH,KAAK;EACpB;EACI,OAAOL,WAAW;AACtB,CAAC,CAACS,KAAK,CAAC","names":["isApolloError","err","hasOwnProperty","generateErrorMessage","message","isNonEmptyArray","graphQLErrors","forEach","graphQLError","errorMessage","networkError","replace","ApolloError","_super","__extends","_a","extraInfo","_this","call","__proto__","prototype","Error"],"sources":["ApolloError.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { isNonEmptyArray } from '../utilities/common/arrays';\nexport function isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors)) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += err.networkError.message + \"\\n\";\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        _this.message = errorMessage || generateErrorMessage(_this);\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\nexport { ApolloError };\n//# sourceMappingURL=ApolloError.js.map"]},"metadata":{},"sourceType":"module"}