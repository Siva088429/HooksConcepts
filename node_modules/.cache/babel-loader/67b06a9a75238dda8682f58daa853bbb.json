{"ast":null,"code":"import { __assign } from 'tslib';\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { getApolloContext } from '../context/ApolloContext.js';\nimport { MutationData } from '../data/MutationData.js';\nfunction useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n  var _a = useState({\n      called: false,\n      loading: false\n    }),\n    result = _a[0],\n    setResult = _a[1];\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n    return mutationDataRef.current;\n  }\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}\nexport { useMutation };","map":{"version":3,"mappings":";;;;AAIO,SAASA,WAAW,CAACC,QAAQ,EAAEC,OAAO,EAAE;EAC3C,IAAIC,OAAO,GAAGC,UAAU,CAACC,gBAAgB,EAAE,CAAC;EAC5C,IAAIC,EAAE,GAAGC,QAAQ,CAAC;MAAEC,MAAM,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAK,CAAE,CAAC;IAAEC,MAAM,GAAGJ,EAAE,CAAC,CAAC,CAAC;IAAEK,SAAS,GAAGL,EAAE,CAAC,CAAC,CAAC;EACvF,IAAIM,cAAc,GAAGV,OAAO,GAAGW,QAAQ,CAACA,QAAQ,CAAC,EAAE,EAAEX,OAAO,CAAC,EAAE;IAAED,QAAQ,EAAEA;EAAQ,CAAE,CAAC,GAAG;IAAEA,QAAQ,EAAEA;EAAQ,CAAE;EAC/G,IAAIa,eAAe,GAAGC,MAAM,EAAE;EAC9B,SAASC,kBAAkB,GAAG;IAC1B,IAAI,CAACF,eAAe,CAACG,OAAO,EAAE;MAC1BH,eAAe,CAACG,OAAO,GAAG,IAAIC,YAAY,CAAC;QACvChB,OAAO,EAAEU,cAAc;QACvBT,OAAO,EAAEA,OAAO;QAChBO,MAAM,EAAEA,MAAM;QACdC,SAAS,EAAEA;MAC3B,CAAa,CAAC;IACd;IACQ,OAAOG,eAAe,CAACG,OAAO;EACtC;EACI,IAAIE,YAAY,GAAGH,kBAAkB,EAAE;EACvCG,YAAY,CAACC,UAAU,CAACR,cAAc,CAAC;EACvCO,YAAY,CAAChB,OAAO,GAAGA,OAAO;EAC9BkB,SAAS,CAAC,YAAY;IAAE,OAAOF,YAAY,CAACG,YAAY,EAAE;EAAC,CAAE,CAAC;EAC9D,OAAOH,YAAY,CAACI,OAAO,CAACb,MAAM,CAAC;AACvC","names":["useMutation","mutation","options","context","useContext","getApolloContext","_a","useState","called","loading","result","setResult","updatedOptions","__assign","mutationDataRef","useRef","getMutationDataRef","current","MutationData","mutationData","setOptions","useEffect","afterExecute","execute"],"sources":["useMutation.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { MutationData } from '../data/MutationData';\nimport { getApolloContext } from '../context/ApolloContext';\nexport function useMutation(mutation, options) {\n    var context = useContext(getApolloContext());\n    var _a = useState({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n//# sourceMappingURL=useMutation.js.map"]},"metadata":{},"sourceType":"module"}