{"ast":null,"code":"import { InvariantError } from 'ts-invariant';\nimport stringify from 'fast-json-stable-stringify';\nimport { getFragmentFromSelection } from './fragments.js';\nfunction makeReference(id) {\n  return {\n    __ref: String(id)\n  };\n}\nfunction isReference(obj) {\n  return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\nfunction isStringValue(value) {\n  return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n  return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n  return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n  return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n  return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n  return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n  return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n  return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n  return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    var nestedArgObj_1 = {};\n    value.fields.map(function (obj) {\n      return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n    });\n    argObj[name.value] = nestedArgObj_1;\n  } else if (isVariable(value)) {\n    var variableValue = (variables || {})[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(function (listValue) {\n      var nestedArgArrayObj = {};\n      valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n      return nestedArgArrayObj[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(33) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" + 'is not supported. Use variables instead of inline arguments to ' + 'overcome this limitation.');\n  }\n}\nfunction storeKeyNameFromField(field, variables) {\n  var directivesObj = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(function (directive) {\n      directivesObj[directive.name.value] = {};\n      if (directive.arguments) {\n        directive.arguments.forEach(function (_a) {\n          var name = _a.name,\n            value = _a.value;\n          return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n        });\n      }\n    });\n  }\n  var argObj = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n        value = _a.value;\n      return valueToObjectRepresentation(argObj, name, value, variables);\n    });\n  }\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = ['connection', 'include', 'skip', 'client', 'rest', 'export'];\nfunction getStoreKeyName(fieldName, args, directives) {\n  if (args && directives && directives['connection'] && directives['connection']['key']) {\n    if (directives['connection']['filter'] && directives['connection']['filter'].length > 0) {\n      var filterKeys = directives['connection']['filter'] ? directives['connection']['filter'] : [];\n      filterKeys.sort();\n      var filteredArgs_1 = {};\n      filterKeys.forEach(function (key) {\n        filteredArgs_1[key] = args[key];\n      });\n      return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n  var completeFieldName = fieldName;\n  if (args) {\n    var stringifiedArgs = stringify(args);\n    completeFieldName += \"(\" + stringifiedArgs + \")\";\n  }\n  if (directives) {\n    Object.keys(directives).forEach(function (key) {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n      } else {\n        completeFieldName += \"@\" + key;\n      }\n    });\n  }\n  return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n  if (field.arguments && field.arguments.length) {\n    var argObj_1 = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n        value = _a.value;\n      return valueToObjectRepresentation(argObj_1, name, value, variables);\n    });\n    return argObj_1;\n  }\n  return null;\n}\nfunction resultKeyNameFromField(field) {\n  return field.alias ? field.alias.value : field.name.value;\n}\nfunction getTypenameFromResult(result, selectionSet, fragmentMap) {\n  if (typeof result.__typename === 'string') {\n    return result.__typename;\n  }\n  for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n    var selection = _a[_i];\n    if (isField(selection)) {\n      if (selection.name.value === '__typename') {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else {\n      var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n      if (typeof typename === 'string') {\n        return typename;\n      }\n    }\n  }\n}\nfunction isField(selection) {\n  return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n  return selection.kind === 'InlineFragment';\n}\nexport { argumentsObjectFromField, getStoreKeyName, getTypenameFromResult, isField, isInlineFragment, isReference, makeReference, resultKeyNameFromField, storeKeyNameFromField, valueToObjectRepresentation };","map":{"version":3,"mappings":"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","names":["makeReference","id","__ref","String","isReference","obj","Boolean","isStringValue","value","kind","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","name","variables","Number","nestedArgObj_1","fields","map","variableValue","values","listValue","nestedArgArrayObj","process","env","NODE_ENV","InvariantError","storeKeyNameFromField","field","directivesObj","directives","forEach","directive","arguments","_a","length","getStoreKeyName","KNOWN_DIRECTIVES","fieldName","args","filterKeys","sort","filteredArgs_1","key","JSON","stringify","completeFieldName","stringifiedArgs","Object","keys","indexOf","argumentsObjectFromField","argObj_1","resultKeyNameFromField","alias","getTypenameFromResult","result","selectionSet","fragmentMap","__typename","_i","selections","selection","isField","typename","getFragmentFromSelection","isInlineFragment"],"sources":["storeUtils.js"],"sourcesContent":["import stringify from 'fast-json-stable-stringify';\nimport { InvariantError } from 'ts-invariant';\nimport { getFragmentFromSelection } from './fragments';\nexport function makeReference(id) {\n    return { __ref: String(id) };\n}\nexport function isReference(obj) {\n    return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nexport function storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nexport function getStoreKeyName(fieldName, args, directives) {\n    if (args &&\n        directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = args[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nexport function argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nexport function resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n    if (typeof result.__typename === 'string') {\n        return result.__typename;\n    }\n    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n        var selection = _a[_i];\n        if (isField(selection)) {\n            if (selection.name.value === '__typename') {\n                return result[resultKeyNameFromField(selection)];\n            }\n        }\n        else {\n            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n            if (typeof typename === 'string') {\n                return typename;\n            }\n        }\n    }\n}\nexport function isField(selection) {\n    return selection.kind === 'Field';\n}\nexport function isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\n//# sourceMappingURL=storeUtils.js.map"]},"metadata":{},"sourceType":"module"}