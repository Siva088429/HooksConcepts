{"ast":null,"code":"import { __extends } from 'tslib';\nimport Observable from 'zen-observable';\nimport 'symbol-observable';\nimport { iterateObserversSafely } from './iteration.js';\nfunction isPromiseLike(value) {\n  return value && typeof value.then === \"function\";\n}\nvar Concast = function (_super) {\n  __extends(Concast, _super);\n  function Concast(sources) {\n    var _this = _super.call(this, function (observer) {\n      _this.addObserver(observer);\n      return function () {\n        return _this.removeObserver(observer);\n      };\n    }) || this;\n    _this.observers = new Set();\n    _this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    _this.handlers = {\n      next: function (result) {\n        if (_this.sub !== null) {\n          _this.latest = [\"next\", result];\n          iterateObserversSafely(_this.observers, \"next\", result);\n        }\n      },\n      error: function (error) {\n        if (_this.sub !== null) {\n          if (_this.sub) _this.sub.unsubscribe();\n          _this.sub = null;\n          _this.latest = [\"error\", error];\n          _this.reject(error);\n          iterateObserversSafely(_this.observers, \"error\", error);\n        }\n      },\n      complete: function () {\n        if (_this.sub !== null) {\n          var value = _this.sources.shift();\n          if (!value) {\n            _this.sub = null;\n            if (_this.latest && _this.latest[0] === \"next\") {\n              _this.resolve(_this.latest[1]);\n            } else {\n              _this.resolve();\n            }\n            iterateObserversSafely(_this.observers, \"complete\");\n          } else if (isPromiseLike(value)) {\n            value.then(function (obs) {\n              return _this.sub = obs.subscribe(_this.handlers);\n            });\n          } else {\n            _this.sub = value.subscribe(_this.handlers);\n          }\n        }\n      }\n    };\n    _this.cancel = function (reason) {\n      _this.reject(reason);\n      _this.sources = [];\n      _this.handlers.complete();\n    };\n    _this.promise.catch(function (_) {});\n    if (isPromiseLike(sources)) {\n      sources.then(function (iterable) {\n        return _this.start(iterable);\n      }, _this.handlers.error);\n    } else {\n      _this.start(sources);\n    }\n    return _this;\n  }\n  Concast.prototype.start = function (sources) {\n    if (this.sub !== void 0) return;\n    this.sources = Array.from(sources);\n    this.handlers.complete();\n  };\n  Concast.prototype.addObserver = function (observer) {\n    if (!this.observers.has(observer)) {\n      if (this.latest) {\n        var nextOrError = this.latest[0];\n        var method = observer[nextOrError];\n        if (method) {\n          method.call(observer, this.latest[1]);\n        }\n        if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n          observer.complete();\n        }\n      }\n      this.observers.add(observer);\n    }\n  };\n  Concast.prototype.removeObserver = function (observer, quietly) {\n    if (this.observers.delete(observer) && this.observers.size < 1) {\n      if (quietly) return;\n      if (this.sub) {\n        this.sub.unsubscribe();\n        this.reject(new Error(\"Observable cancelled prematurely\"));\n      }\n      this.sub = null;\n    }\n  };\n  Concast.prototype.cleanup = function (callback) {\n    var _this = this;\n    var called = false;\n    var once = function () {\n      if (!called) {\n        called = true;\n        _this.observers.delete(observer);\n        callback();\n      }\n    };\n    var observer = {\n      next: once,\n      error: once,\n      complete: once\n    };\n    this.addObserver(observer);\n  };\n  return Concast;\n}(Observable);\nif (typeof Symbol === \"function\" && Symbol.species) {\n  Object.defineProperty(Concast, Symbol.species, {\n    value: Observable\n  });\n}\nexport { Concast };","map":{"version":3,"mappings":"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","names":["isPromiseLike","value","then","Concast","_super","__extends","sources","_this","call","observer","addObserver","removeObserver","observers","Set","promise","Promise","resolve","reject","handlers","next","result","sub","latest","iterateObserversSafely","error","unsubscribe","complete","shift","obs","subscribe","cancel","reason","catch","_","iterable","start","prototype","Array","from","has","nextOrError","method","add","quietly","delete","size","Error","cleanup","callback","called","once","Observable","Symbol","species","Object","defineProperty"],"sources":["Concast.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { Observable } from \"./Observable\";\nimport { iterateObserversSafely } from \"./iteration\";\nfunction isPromiseLike(value) {\n    return value && typeof value.then === \"function\";\n}\nvar Concast = (function (_super) {\n    __extends(Concast, _super);\n    function Concast(sources) {\n        var _this = _super.call(this, function (observer) {\n            _this.addObserver(observer);\n            return function () { return _this.removeObserver(observer); };\n        }) || this;\n        _this.observers = new Set();\n        _this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        _this.handlers = {\n            next: function (result) {\n                if (_this.sub !== null) {\n                    _this.latest = [\"next\", result];\n                    iterateObserversSafely(_this.observers, \"next\", result);\n                }\n            },\n            error: function (error) {\n                if (_this.sub !== null) {\n                    if (_this.sub)\n                        _this.sub.unsubscribe();\n                    _this.sub = null;\n                    _this.latest = [\"error\", error];\n                    _this.reject(error);\n                    iterateObserversSafely(_this.observers, \"error\", error);\n                }\n            },\n            complete: function () {\n                if (_this.sub !== null) {\n                    var value = _this.sources.shift();\n                    if (!value) {\n                        _this.sub = null;\n                        if (_this.latest &&\n                            _this.latest[0] === \"next\") {\n                            _this.resolve(_this.latest[1]);\n                        }\n                        else {\n                            _this.resolve();\n                        }\n                        iterateObserversSafely(_this.observers, \"complete\");\n                    }\n                    else if (isPromiseLike(value)) {\n                        value.then(function (obs) { return _this.sub = obs.subscribe(_this.handlers); });\n                    }\n                    else {\n                        _this.sub = value.subscribe(_this.handlers);\n                    }\n                }\n            },\n        };\n        _this.cancel = function (reason) {\n            _this.reject(reason);\n            _this.sources = [];\n            _this.handlers.complete();\n        };\n        _this.promise.catch(function (_) { });\n        if (isPromiseLike(sources)) {\n            sources.then(function (iterable) { return _this.start(iterable); }, _this.handlers.error);\n        }\n        else {\n            _this.start(sources);\n        }\n        return _this;\n    }\n    Concast.prototype.start = function (sources) {\n        if (this.sub !== void 0)\n            return;\n        this.sources = Array.from(sources);\n        this.handlers.complete();\n    };\n    Concast.prototype.addObserver = function (observer) {\n        if (!this.observers.has(observer)) {\n            if (this.latest) {\n                var nextOrError = this.latest[0];\n                var method = observer[nextOrError];\n                if (method) {\n                    method.call(observer, this.latest[1]);\n                }\n                if (this.sub === null &&\n                    nextOrError === \"next\" &&\n                    observer.complete) {\n                    observer.complete();\n                }\n            }\n            this.observers.add(observer);\n        }\n    };\n    Concast.prototype.removeObserver = function (observer, quietly) {\n        if (this.observers.delete(observer) &&\n            this.observers.size < 1) {\n            if (quietly)\n                return;\n            if (this.sub) {\n                this.sub.unsubscribe();\n                this.reject(new Error(\"Observable cancelled prematurely\"));\n            }\n            this.sub = null;\n        }\n    };\n    Concast.prototype.cleanup = function (callback) {\n        var _this = this;\n        var called = false;\n        var once = function () {\n            if (!called) {\n                called = true;\n                _this.observers.delete(observer);\n                callback();\n            }\n        };\n        var observer = {\n            next: once,\n            error: once,\n            complete: once,\n        };\n        this.addObserver(observer);\n    };\n    return Concast;\n}(Observable));\nexport { Concast };\nif (typeof Symbol === \"function\" && Symbol.species) {\n    Object.defineProperty(Concast, Symbol.species, {\n        value: Observable,\n    });\n}\n//# sourceMappingURL=Concast.js.map"]},"metadata":{},"sourceType":"module"}