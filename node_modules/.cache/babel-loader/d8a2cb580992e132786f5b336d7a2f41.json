{"ast":null,"code":"import { __assign } from 'tslib';\nimport { print } from 'graphql/language/printer';\nvar defaultHttpOptions = {\n  includeQuery: true,\n  includeExtensions: false\n};\nvar defaultHeaders = {\n  accept: '*/*',\n  'content-type': 'application/json'\n};\nvar defaultOptions = {\n  method: 'POST'\n};\nvar fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions\n};\nvar selectHttpOptionsAndBody = function (operation, fallbackConfig) {\n  var configs = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    configs[_i - 2] = arguments[_i];\n  }\n  var options = __assign(__assign({}, fallbackConfig.options), {\n    headers: fallbackConfig.headers,\n    credentials: fallbackConfig.credentials\n  });\n  var http = fallbackConfig.http || {};\n  configs.forEach(function (config) {\n    options = __assign(__assign(__assign({}, options), config.options), {\n      headers: __assign(__assign({}, options.headers), config.headers)\n    });\n    if (config.credentials) options.credentials = config.credentials;\n    http = __assign(__assign({}, http), config.http);\n  });\n  var operationName = operation.operationName,\n    extensions = operation.extensions,\n    variables = operation.variables,\n    query = operation.query;\n  var body = {\n    operationName: operationName,\n    variables: variables\n  };\n  if (http.includeExtensions) body.extensions = extensions;\n  if (http.includeQuery) body.query = print(query);\n  return {\n    options: options,\n    body: body\n  };\n};\nexport { fallbackHttpConfig, selectHttpOptionsAndBody };","map":{"version":3,"mappings":";;AAEA,IAAIA,kBAAkB,GAAG;EACrBC,YAAY,EAAE,IAAI;EAClBC,iBAAiB,EAAE;AACvB,CAAC;AACD,IAAIC,cAAc,GAAG;EACjBC,MAAM,EAAE,KAAK;EACb,cAAc,EAAE;AACpB,CAAC;AACD,IAAIC,cAAc,GAAG;EACjBC,MAAM,EAAE;AACZ,CAAC;AACS,IAACC,kBAAkB,GAAG;EAC5BC,IAAI,EAAER,kBAAkB;EACxBS,OAAO,EAAEN,cAAc;EACvBO,OAAO,EAAEL;AACb;AACU,IAACM,wBAAwB,GAAG,UAAUC,SAAS,EAAEC,cAAc,EAAE;EACvE,IAAIC,OAAO,GAAG,EAAE;EAChB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC1CD,OAAO,CAACC,EAAE,GAAG,CAAC,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;EACvC;EACI,IAAIL,OAAO,GAAGQ,QAAQ,CAACA,QAAQ,CAAC,EAAE,EAAEL,cAAc,CAACH,OAAO,CAAC,EAAE;IAAED,OAAO,EAAEI,cAAc,CAACJ,OAAO;IAAEU,WAAW,EAAEN,cAAc,CAACM;EAAW,CAAE,CAAC;EAC1I,IAAIX,IAAI,GAAGK,cAAc,CAACL,IAAI,IAAI,EAAE;EACpCM,OAAO,CAACM,OAAO,CAAC,UAAUC,MAAM,EAAE;IAC9BX,OAAO,GAAGQ,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAE,EAAER,OAAO,CAAC,EAAEW,MAAM,CAACX,OAAO,CAAC,EAAE;MAAED,OAAO,EAAES,QAAQ,CAACA,QAAQ,CAAC,EAAE,EAAER,OAAO,CAACD,OAAO,CAAC,EAAEY,MAAM,CAACZ,OAAO;IAAC,CAAE,CAAC;IACzI,IAAIY,MAAM,CAACF,WAAW,EAClBT,OAAO,CAACS,WAAW,GAAGE,MAAM,CAACF,WAAW;IAC5CX,IAAI,GAAGU,QAAQ,CAACA,QAAQ,CAAC,EAAE,EAAEV,IAAI,CAAC,EAAEa,MAAM,CAACb,IAAI,CAAC;EACxD,CAAK,CAAC;EACF,IAAIc,aAAa,GAAGV,SAAS,CAACU,aAAa;IAAEC,UAAU,GAAGX,SAAS,CAACW,UAAU;IAAEC,SAAS,GAAGZ,SAAS,CAACY,SAAS;IAAEC,KAAK,GAAGb,SAAS,CAACa,KAAK;EACxI,IAAIC,IAAI,GAAG;IAAEJ,aAAa,EAAEA,aAAa;IAAEE,SAAS,EAAEA;EAAS,CAAE;EACjE,IAAIhB,IAAI,CAACN,iBAAiB,EACtBwB,IAAI,CAACH,UAAU,GAAGA,UAAU;EAChC,IAAIf,IAAI,CAACP,YAAY,EACjByB,IAAI,CAACD,KAAK,GAAGE,KAAK,CAACF,KAAK,CAAC;EAC7B,OAAO;IACHf,OAAO,EAAEA,OAAO;IAChBgB,IAAI,EAAEA;EACd,CAAK;AACL","names":["defaultHttpOptions","includeQuery","includeExtensions","defaultHeaders","accept","defaultOptions","method","fallbackHttpConfig","http","headers","options","selectHttpOptionsAndBody","operation","fallbackConfig","configs","_i","arguments","length","__assign","credentials","forEach","config","operationName","extensions","variables","query","body","print"],"sources":["selectHttpOptionsAndBody.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { print } from 'graphql/language/printer';\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n};\nvar defaultHeaders = {\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nexport var fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nexport var selectHttpOptionsAndBody = function (operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = __assign(__assign({}, fallbackConfig.options), { headers: fallbackConfig.headers, credentials: fallbackConfig.credentials });\n    var http = fallbackConfig.http || {};\n    configs.forEach(function (config) {\n        options = __assign(__assign(__assign({}, options), config.options), { headers: __assign(__assign({}, options.headers), config.headers) });\n        if (config.credentials)\n            options.credentials = config.credentials;\n        http = __assign(__assign({}, http), config.http);\n    });\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    if (http.includeQuery)\n        body.query = print(query);\n    return {\n        options: options,\n        body: body,\n    };\n};\n//# sourceMappingURL=selectHttpOptionsAndBody.js.map"]},"metadata":{},"sourceType":"module"}