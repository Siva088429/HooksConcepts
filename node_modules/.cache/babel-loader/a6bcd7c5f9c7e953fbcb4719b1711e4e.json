{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akula.s\\\\Downloads\\\\mutations-example-app-final-forked\\\\src\\\\index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, useMutation, gql } from \"@apollo/client\";\nconst client = new ApolloClient({\n  uri: \"https://sxewr.sse.codesandbox.io/\",\n  cache: new InMemoryCache()\n});\nconst GET_TODOS = gql`\n  {\n    todos {\n      id\n      type\n    }\n  }\n`;\nconst UPDATE_TODO = gql`\n  mutation UpdateTodo($id: String!, $type: String!) {\n    updateTodo(id: $id, type: $type) {\n      id\n      type\n    }\n  }\n`;\nconst RESET_TODO = gql`\n  mutation ResetTodo($id: String, $type:String!)\n`;\nfunction Todos() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TODOS);\n  const [updateTodo, {\n    loading: mutationLoading,\n    error: mutationError\n  }] = useMutation(UPDATE_TODO);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return data.todos.map(_ref => {\n    let {\n      id,\n      type\n    } = _ref;\n    let input;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, type), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        updateTodo({\n          variables: {\n            id,\n            type: input.value\n          }\n        });\n        input.value = \"\";\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: node => {\n        input = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Update Todo\")), mutationLoading && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, \"Loading...\"), mutationError && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }\n    }, \"Error :( Please try again\"));\n  });\n}\nconst ADD_TODO = gql`\n  mutation AddTodo($type: String!) {\n    addTodo(type: $type) {\n      id\n      type\n    }\n  }\n`;\nfunction AddTodo() {\n  let input;\n  const [addTodo] = useMutation(ADD_TODO, {\n    variables: {\n      type: \"placeholder\",\n      someOtherVariable: 1234\n    },\n    refetchQueries: [{\n      query: GET_TODOS\n    },\n    // DocumentNode object parsed with gql\n    'GetComments' // Query name\n    ],\n\n    update(cache, _ref2) {\n      let {\n        data: {\n          addTodo\n        }\n      } = _ref2;\n      cache.modify({\n        fields: {\n          todos() {\n            let existingTodos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            const newTodoRef = cache.writeFragment({\n              data: addTodo,\n              fragment: gql`\n                fragment NewTodo on Todo {\n                  id\n                  type\n                }\n              `\n            });\n            return existingTodos.concat(newTodoRef);\n          }\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      addTodo({\n        variables: {\n          type: input.value\n        }\n      });\n      input.value = \"\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: node => {\n      input = node;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Add Todo\")));\n}\nfunction App() {\n  return /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Building Mutation components \\uD83D\\uDE80\"), /*#__PURE__*/React.createElement(AddTodo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Todos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })));\n}\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 8\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"names":["React","render","ApolloClient","InMemoryCache","ApolloProvider","useQuery","useMutation","gql","client","uri","cache","GET_TODOS","UPDATE_TODO","RESET_TODO","Todos","loading","error","data","updateTodo","mutationLoading","mutationError","todos","map","id","type","input","e","preventDefault","variables","value","node","ADD_TODO","AddTodo","addTodo","someOtherVariable","refetchQueries","query","update","modify","fields","existingTodos","newTodoRef","writeFragment","fragment","concat","App","document","getElementById"],"sources":["C:/Users/akula.s/Downloads/mutations-example-app-final-forked/src/index.js"],"sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  useMutation,\n  gql\n} from \"@apollo/client\";\n\n\n\nconst client = new ApolloClient({\n  uri: \"https://sxewr.sse.codesandbox.io/\",\n  cache: new InMemoryCache()\n});\n\nconst GET_TODOS = gql`\n  {\n    todos {\n      id\n      type\n    }\n  }\n`;\n\nconst UPDATE_TODO = gql`\n  mutation UpdateTodo($id: String!, $type: String!) {\n    updateTodo(id: $id, type: $type) {\n      id\n      type\n    }\n  }\n`;\n\nconst RESET_TODO = gql`\n  mutation ResetTodo($id: String, $type:String!)\n`\n\n\n\nfunction Todos() {\n  const { loading, error, data } = useQuery(GET_TODOS);\n  const [updateTodo,{ loading: mutationLoading, error: mutationError }] = useMutation(UPDATE_TODO);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.todos.map(({ id, type }) => {\n    let input;\n\n    return (\n      <div key={id}>\n        <p>{type}</p>\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            updateTodo({ variables: { id, type: input.value } });\n\n            input.value = \"\";\n          }}\n        >\n          <input\n            ref={node => {\n              input = node;\n            }}\n          />\n          <button type=\"submit\">Update Todo</button>\n        </form>\n        {mutationLoading && <p>Loading...</p>}\n        {mutationError && <p>Error :( Please try again</p>}\n      </div>\n    );\n  });\n}\n\nconst ADD_TODO = gql`\n  mutation AddTodo($type: String!) {\n    addTodo(type: $type) {\n      id\n      type\n    }\n  }\n`;\n\nfunction AddTodo() {\n  let input;\n  const [addTodo] = useMutation(ADD_TODO, {\n    variables: {\n      type: \"placeholder\",\n      someOtherVariable: 1234,\n    },\n      refetchQueries: [\n    {query:GET_TODOS}, // DocumentNode object parsed with gql\n    'GetComments' // Query name\n  ],\n    update(\n      cache,\n      {\n        data: { addTodo }\n      }\n    ) {\n      cache.modify({\n        fields: {\n          todos(existingTodos = []) {\n            const newTodoRef = cache.writeFragment({\n              data: addTodo,\n              fragment: gql`\n                fragment NewTodo on Todo {\n                  id\n                  type\n                }\n              `\n            });\n            return existingTodos.concat(newTodoRef);\n          }\n        }\n      });\n    }\n  });\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          addTodo({ variables: { type: input.value } });\n          input.value = \"\";\n        }}\n      >\n        <input\n          ref={node => {\n            input = node;\n          }}\n        />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        <h2>Building Mutation components 🚀</h2>\n        <AddTodo />\n        <Todos />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}