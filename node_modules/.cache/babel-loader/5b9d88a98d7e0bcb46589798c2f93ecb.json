{"ast":null,"code":"import { InvariantError } from 'ts-invariant';\nvar checkFetcher = function (fetcher) {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(6) : new InvariantError(\"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \");\n  }\n};\nexport { checkFetcher };","map":{"version":3,"mappings":";AACU,IAACA,YAAY,GAAG,UAAUC,OAAO,EAAE;EACzC,IAAI,CAACA,OAAO,IAAI,OAAOC,KAAK,KAAK,WAAW,EAAE;IAC1C,MAAMC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG,IAAIC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAIA,cAAc,CAAC,obAAob,CAAC;EACthB;AACA","names":["checkFetcher","fetcher","fetch","process","env","NODE_ENV","InvariantError"],"sources":["checkFetcher.js"],"sourcesContent":["import { InvariantError } from 'ts-invariant';\nexport var checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === 'undefined') {\n        throw new InvariantError(\"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \");\n    }\n};\n//# sourceMappingURL=checkFetcher.js.map"]},"metadata":{},"sourceType":"module"}